package com.sforce.soap.enterprise;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by FuseSource Services Framework 2.5.0.fuse-7-061
 * 2013-01-23T23:53:39.928+05:30
 * Generated source version: 2.5.0.fuse-7-061
 * 
 */
@WebService(targetNamespace = "urn:enterprise.soap.sforce.com", name = "Soap")
@XmlSeeAlso({ObjectFactory.class, com.sforce.soap.enterprise.sobject.ObjectFactory.class, com.sforce.soap.enterprise.fault.ObjectFactory.class})
public interface Soap {

    /**
     * Set a user's password
     */
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "setPassword", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.SetPassword")
    @WebMethod
    @ResponseWrapper(localName = "setPasswordResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.SetPasswordResponse")
    public com.sforce.soap.enterprise.SetPasswordResult setPassword(
        @WebParam(name = "userId", targetNamespace = "urn:enterprise.soap.sforce.com")
        java.lang.String userId,
        @WebParam(name = "password", targetNamespace = "urn:enterprise.soap.sforce.com")
        java.lang.String password
    ) throws InvalidIdFault, InvalidNewPasswordFault, UnexpectedErrorFault;

    /**
     * Describe the data category group structures for a given set of pair of types and data category group name
     */
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "describeDataCategoryGroupStructures", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.DescribeDataCategoryGroupStructures")
    @WebMethod
    @ResponseWrapper(localName = "describeDataCategoryGroupStructuresResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.DescribeDataCategoryGroupStructuresResponse")
    public java.util.List<com.sforce.soap.enterprise.DescribeDataCategoryGroupStructureResult> describeDataCategoryGroupStructures(
        @WebParam(name = "pairs", targetNamespace = "urn:enterprise.soap.sforce.com")
        java.util.List<com.sforce.soap.enterprise.DataCategoryGroupSobjectTypePair> pairs,
        @WebParam(name = "topCategoriesOnly", targetNamespace = "urn:enterprise.soap.sforce.com")
        boolean topCategoriesOnly
    ) throws InvalidSObjectFault, UnexpectedErrorFault;

    /**
     * Describe all the data category groups available for a given set of types
     */
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "describeDataCategoryGroups", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.DescribeDataCategoryGroups")
    @WebMethod
    @ResponseWrapper(localName = "describeDataCategoryGroupsResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.DescribeDataCategoryGroupsResponse")
    public java.util.List<com.sforce.soap.enterprise.DescribeDataCategoryGroupResult> describeDataCategoryGroups(
        @WebParam(name = "sObjectType", targetNamespace = "urn:enterprise.soap.sforce.com")
        java.util.List<java.lang.String> sObjectType
    ) throws InvalidSObjectFault, UnexpectedErrorFault;

    /**
     * Get the IDs for deleted sObjects
     */
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "getDeleted", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.GetDeleted")
    @WebMethod
    @ResponseWrapper(localName = "getDeletedResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.GetDeletedResponse")
    public com.sforce.soap.enterprise.GetDeletedResult getDeleted(
        @WebParam(name = "sObjectType", targetNamespace = "urn:enterprise.soap.sforce.com")
        java.lang.String sObjectType,
        @WebParam(name = "startDate", targetNamespace = "urn:enterprise.soap.sforce.com")
        javax.xml.datatype.XMLGregorianCalendar startDate,
        @WebParam(name = "endDate", targetNamespace = "urn:enterprise.soap.sforce.com")
        javax.xml.datatype.XMLGregorianCalendar endDate
    ) throws InvalidSObjectFault, UnexpectedErrorFault;

    /**
     * Submit an entity to a workflow process or process a workitem
     */
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "process", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.Process")
    @WebMethod
    @ResponseWrapper(localName = "processResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.ProcessResponse")
    public java.util.List<com.sforce.soap.enterprise.ProcessResult> process(
        @WebParam(name = "actions", targetNamespace = "urn:enterprise.soap.sforce.com")
        java.util.List<com.sforce.soap.enterprise.ProcessRequest> actions
    ) throws InvalidIdFault, UnexpectedErrorFault;

    /**
     * Create a Query Cursor
     */
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "query", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.Query")
    @WebMethod
    @ResponseWrapper(localName = "queryResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.QueryResponse")
    public com.sforce.soap.enterprise.QueryResult query(
        @WebParam(name = "queryString", targetNamespace = "urn:enterprise.soap.sforce.com")
        java.lang.String queryString
    ) throws InvalidSObjectFault, InvalidFieldFault, InvalidIdFault, InvalidQueryLocatorFault, MalformedQueryFault, UnexpectedErrorFault;

    /**
     * Login to the Salesforce.com SOAP Api
     */
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "login", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.Login")
    @WebMethod
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.LoginResponse")
    public com.sforce.soap.enterprise.LoginResult login(
        @WebParam(name = "username", targetNamespace = "urn:enterprise.soap.sforce.com")
        java.lang.String username,
        @WebParam(name = "password", targetNamespace = "urn:enterprise.soap.sforce.com")
        java.lang.String password
    ) throws InvalidIdFault, LoginFault, UnexpectedErrorFault;

    /**
     * Create a set of new sObjects
     */
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "create", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.Create")
    @WebMethod
    @ResponseWrapper(localName = "createResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.CreateResponse")
    public java.util.List<com.sforce.soap.enterprise.SaveResult> create(
        @WebParam(name = "sObjects", targetNamespace = "urn:enterprise.soap.sforce.com")
        java.util.List<com.sforce.soap.enterprise.sobject.SObjectType> sObjects
    ) throws InvalidSObjectFault, InvalidFieldFault, InvalidIdFault, UnexpectedErrorFault;

    /**
     * Get a set of sObjects
     */
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "retrieve", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.Retrieve")
    @WebMethod
    @ResponseWrapper(localName = "retrieveResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.RetrieveResponse")
    public java.util.List<com.sforce.soap.enterprise.sobject.SObjectType> retrieve(
        @WebParam(name = "fieldList", targetNamespace = "urn:enterprise.soap.sforce.com")
        java.lang.String fieldList,
        @WebParam(name = "sObjectType", targetNamespace = "urn:enterprise.soap.sforce.com")
        java.lang.String sObjectType,
        @WebParam(name = "ids", targetNamespace = "urn:enterprise.soap.sforce.com")
        java.util.List<java.lang.String> ids
    ) throws InvalidSObjectFault, InvalidFieldFault, InvalidIdFault, MalformedQueryFault, UnexpectedErrorFault;

    /**
     * Get the IDs for updated sObjects
     */
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "getUpdated", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.GetUpdated")
    @WebMethod
    @ResponseWrapper(localName = "getUpdatedResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.GetUpdatedResponse")
    public com.sforce.soap.enterprise.GetUpdatedResult getUpdated(
        @WebParam(name = "sObjectType", targetNamespace = "urn:enterprise.soap.sforce.com")
        java.lang.String sObjectType,
        @WebParam(name = "startDate", targetNamespace = "urn:enterprise.soap.sforce.com")
        javax.xml.datatype.XMLGregorianCalendar startDate,
        @WebParam(name = "endDate", targetNamespace = "urn:enterprise.soap.sforce.com")
        javax.xml.datatype.XMLGregorianCalendar endDate
    ) throws InvalidSObjectFault, UnexpectedErrorFault;

    /**
     * Empty a set of sObjects from the recycle bin
     */
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "emptyRecycleBin", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.EmptyRecycleBin")
    @WebMethod
    @ResponseWrapper(localName = "emptyRecycleBinResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.EmptyRecycleBinResponse")
    public java.util.List<com.sforce.soap.enterprise.EmptyRecycleBinResult> emptyRecycleBin(
        @WebParam(name = "ids", targetNamespace = "urn:enterprise.soap.sforce.com")
        java.util.List<java.lang.String> ids
    ) throws UnexpectedErrorFault;

    /**
     * Undelete a set of sObjects
     */
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "undelete", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.Undelete")
    @WebMethod
    @ResponseWrapper(localName = "undeleteResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.UndeleteResponse")
    public java.util.List<com.sforce.soap.enterprise.UndeleteResult> undelete(
        @WebParam(name = "ids", targetNamespace = "urn:enterprise.soap.sforce.com")
        java.util.List<java.lang.String> ids
    ) throws UnexpectedErrorFault;

    /**
     * Describe the tabs that appear on a users page
     */
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "describeTabs", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.DescribeTabs")
    @WebMethod
    @ResponseWrapper(localName = "describeTabsResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.DescribeTabsResponse")
    public java.util.List<com.sforce.soap.enterprise.DescribeTabSetResult> describeTabs() throws UnexpectedErrorFault;

    /**
     * Describe the layout of an sObject
     */
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "describeLayout", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.DescribeLayout")
    @WebMethod
    @ResponseWrapper(localName = "describeLayoutResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.DescribeLayoutResponse")
    public com.sforce.soap.enterprise.DescribeLayoutResult describeLayout(
        @WebParam(name = "sObjectType", targetNamespace = "urn:enterprise.soap.sforce.com")
        java.lang.String sObjectType,
        @WebParam(name = "recordTypeIds", targetNamespace = "urn:enterprise.soap.sforce.com")
        java.util.List<java.lang.String> recordTypeIds
    ) throws InvalidSObjectFault, InvalidIdFault, UnexpectedErrorFault;

    /**
     * Create a Query Cursor, including deleted sObjects
     */
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "queryAll", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.QueryAll")
    @WebMethod
    @ResponseWrapper(localName = "queryAllResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.QueryAllResponse")
    public com.sforce.soap.enterprise.QueryResult queryAll(
        @WebParam(name = "queryString", targetNamespace = "urn:enterprise.soap.sforce.com")
        java.lang.String queryString
    ) throws InvalidSObjectFault, InvalidFieldFault, InvalidIdFault, InvalidQueryLocatorFault, MalformedQueryFault, UnexpectedErrorFault;

    /**
     * Delete a set of sObjects
     */
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "delete", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.Delete")
    @WebMethod
    @ResponseWrapper(localName = "deleteResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.DeleteResponse")
    public java.util.List<com.sforce.soap.enterprise.DeleteResult> delete(
        @WebParam(name = "ids", targetNamespace = "urn:enterprise.soap.sforce.com")
        java.util.List<java.lang.String> ids
    ) throws UnexpectedErrorFault;

    /**
     * Update a set of sObjects
     */
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "update", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.Update")
    @WebMethod
    @ResponseWrapper(localName = "updateResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.UpdateResponse")
    public java.util.List<com.sforce.soap.enterprise.SaveResult> update(
        @WebParam(name = "sObjects", targetNamespace = "urn:enterprise.soap.sforce.com")
        java.util.List<com.sforce.soap.enterprise.sobject.SObjectType> sObjects
    ) throws InvalidSObjectFault, InvalidFieldFault, InvalidIdFault, UnexpectedErrorFault;

    /**
     * Logout the current user, invalidating the current session.
     */
    @RequestWrapper(localName = "logout", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.Logout")
    @WebMethod
    @ResponseWrapper(localName = "logoutResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.LogoutResponse")
    public void logout() throws UnexpectedErrorFault;

    /**
     * Reset a user's password
     */
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "resetPassword", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.ResetPassword")
    @WebMethod
    @ResponseWrapper(localName = "resetPasswordResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.ResetPasswordResponse")
    public com.sforce.soap.enterprise.ResetPasswordResult resetPassword(
        @WebParam(name = "userId", targetNamespace = "urn:enterprise.soap.sforce.com")
        java.lang.String userId
    ) throws InvalidIdFault, UnexpectedErrorFault;

    /**
     * Update or insert a set of sObjects based on object id
     */
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "upsert", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.Upsert")
    @WebMethod
    @ResponseWrapper(localName = "upsertResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.UpsertResponse")
    public java.util.List<com.sforce.soap.enterprise.UpsertResult> upsert(
        @WebParam(name = "externalIDFieldName", targetNamespace = "urn:enterprise.soap.sforce.com")
        java.lang.String externalIDFieldName,
        @WebParam(name = "sObjects", targetNamespace = "urn:enterprise.soap.sforce.com")
        java.util.List<com.sforce.soap.enterprise.sobject.SObjectType> sObjects
    ) throws InvalidSObjectFault, InvalidFieldFault, InvalidIdFault, UnexpectedErrorFault;

    /**
     * Describe a number sObjects
     */
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "describeSObjects", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.DescribeSObjects")
    @WebMethod
    @ResponseWrapper(localName = "describeSObjectsResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.DescribeSObjectsResponse")
    public java.util.List<com.sforce.soap.enterprise.DescribeSObjectResult> describeSObjects(
        @WebParam(name = "sObjectType", targetNamespace = "urn:enterprise.soap.sforce.com")
        java.util.List<java.lang.String> sObjectType
    ) throws InvalidSObjectFault, UnexpectedErrorFault;

    /**
     * Describe an sObject
     */
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "describeSObject", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.DescribeSObject")
    @WebMethod
    @ResponseWrapper(localName = "describeSObjectResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.DescribeSObjectResponse")
    public com.sforce.soap.enterprise.DescribeSObjectResult describeSObject(
        @WebParam(name = "sObjectType", targetNamespace = "urn:enterprise.soap.sforce.com")
        java.lang.String sObjectType
    ) throws InvalidSObjectFault, UnexpectedErrorFault;

    /**
     * convert a set of leads
     */
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "convertLead", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.ConvertLead")
    @WebMethod
    @ResponseWrapper(localName = "convertLeadResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.ConvertLeadResponse")
    public java.util.List<com.sforce.soap.enterprise.LeadConvertResult> convertLead(
        @WebParam(name = "leadConverts", targetNamespace = "urn:enterprise.soap.sforce.com")
        java.util.List<com.sforce.soap.enterprise.LeadConvert> leadConverts
    ) throws UnexpectedErrorFault;

    /**
     * Logs out and invalidates session ids
     */
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "invalidateSessions", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.InvalidateSessions")
    @WebMethod
    @ResponseWrapper(localName = "invalidateSessionsResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.InvalidateSessionsResponse")
    public java.util.List<com.sforce.soap.enterprise.InvalidateSessionsResult> invalidateSessions(
        @WebParam(name = "sessionIds", targetNamespace = "urn:enterprise.soap.sforce.com")
        java.util.List<java.lang.String> sessionIds
    ) throws UnexpectedErrorFault;

    /**
     * Describe the layout of the SoftPhone
     */
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "describeSoftphoneLayout", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.DescribeSoftphoneLayout")
    @WebMethod
    @ResponseWrapper(localName = "describeSoftphoneLayoutResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.DescribeSoftphoneLayoutResponse")
    public com.sforce.soap.enterprise.DescribeSoftphoneLayoutResult describeSoftphoneLayout() throws UnexpectedErrorFault;

    /**
     * Gets the next batch of sObjects from a query
     */
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "queryMore", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.QueryMore")
    @WebMethod
    @ResponseWrapper(localName = "queryMoreResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.QueryMoreResponse")
    public com.sforce.soap.enterprise.QueryResult queryMore(
        @WebParam(name = "queryLocator", targetNamespace = "urn:enterprise.soap.sforce.com")
        java.lang.String queryLocator
    ) throws InvalidFieldFault, InvalidQueryLocatorFault, UnexpectedErrorFault;

    /**
     * Send outbound email
     */
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "sendEmail", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.SendEmail")
    @WebMethod
    @ResponseWrapper(localName = "sendEmailResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.SendEmailResponse")
    public java.util.List<com.sforce.soap.enterprise.SendEmailResult> sendEmail(
        @WebParam(name = "messages", targetNamespace = "urn:enterprise.soap.sforce.com")
        java.util.List<com.sforce.soap.enterprise.Email> messages
    ) throws UnexpectedErrorFault;

    /**
     * Search for sObjects
     */
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "search", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.Search")
    @WebMethod
    @ResponseWrapper(localName = "searchResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.SearchResponse")
    public com.sforce.soap.enterprise.SearchResult search(
        @WebParam(name = "searchString", targetNamespace = "urn:enterprise.soap.sforce.com")
        java.lang.String searchString
    ) throws MalformedSearchFault, InvalidSObjectFault, InvalidFieldFault, UnexpectedErrorFault;

    /**
     * Gets server timestamp
     */
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "getServerTimestamp", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.GetServerTimestamp")
    @WebMethod
    @ResponseWrapper(localName = "getServerTimestampResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.GetServerTimestampResponse")
    public com.sforce.soap.enterprise.GetServerTimestampResult getServerTimestamp() throws UnexpectedErrorFault;

    /**
     * Merge and update a set of sObjects based on object id
     */
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "merge", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.Merge")
    @WebMethod
    @ResponseWrapper(localName = "mergeResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.MergeResponse")
    public java.util.List<com.sforce.soap.enterprise.MergeResult> merge(
        @WebParam(name = "request", targetNamespace = "urn:enterprise.soap.sforce.com")
        java.util.List<com.sforce.soap.enterprise.MergeRequest> request
    ) throws InvalidSObjectFault, InvalidFieldFault, InvalidIdFault, UnexpectedErrorFault;

    /**
     * Returns standard information relevant to the current user
     */
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "getUserInfo", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.GetUserInfo")
    @WebMethod
    @ResponseWrapper(localName = "getUserInfoResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.GetUserInfoResponse")
    public com.sforce.soap.enterprise.GetUserInfoResult getUserInfo() throws UnexpectedErrorFault;

    /**
     * Describe the Global state
     */
    @WebResult(name = "result", targetNamespace = "urn:enterprise.soap.sforce.com")
    @RequestWrapper(localName = "describeGlobal", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.DescribeGlobal")
    @WebMethod
    @ResponseWrapper(localName = "describeGlobalResponse", targetNamespace = "urn:enterprise.soap.sforce.com", className = "com.sforce.soap.enterprise.DescribeGlobalResponse")
    public com.sforce.soap.enterprise.DescribeGlobalResult describeGlobal() throws UnexpectedErrorFault;
}
