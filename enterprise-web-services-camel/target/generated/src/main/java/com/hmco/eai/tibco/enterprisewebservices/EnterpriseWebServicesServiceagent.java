package com.hmco.eai.tibco.enterprisewebservices;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by FuseSource Services Framework 2.5.0.fuse-7-061
 * 2013-01-23T23:53:34+05:30
 * Generated source version: 2.5.0.fuse-7-061
 * 
 */
@WebServiceClient(name = "EnterpriseWebServices.serviceagent", 
                  wsdlLocation = "file:/C:/Praveen/Institute/workspace/enterprise-web-services-camel/src/main/resources/META-INF/wsdl/EnterpriseWebServices.wsdl",
                  targetNamespace = "http://www.hmco.com/EAI/Tibco/EnterpriseWebServices") 
public class EnterpriseWebServicesServiceagent extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://www.hmco.com/EAI/Tibco/EnterpriseWebServices", "EnterpriseWebServices.serviceagent");
    public final static QName OrderEndpoint1 = new QName("http://www.hmco.com/EAI/Tibco/EnterpriseWebServices", "OrderEndpoint1");
    public final static QName EskerServicesEndpoint1 = new QName("http://www.hmco.com/EAI/Tibco/EnterpriseWebServices", "EskerServicesEndpoint1");
    public final static QName OrderExEndpoint1 = new QName("http://www.hmco.com/EAI/Tibco/EnterpriseWebServices", "OrderExEndpoint1");
    public final static QName TransactionExEndpoint1 = new QName("http://www.hmco.com/EAI/Tibco/EnterpriseWebServices", "TransactionExEndpoint1");
    public final static QName MaterialExEndpoint1 = new QName("http://www.hmco.com/EAI/Tibco/EnterpriseWebServices", "MaterialExEndpoint1");
    public final static QName CustomerExEndpoint1 = new QName("http://www.hmco.com/EAI/Tibco/EnterpriseWebServices", "CustomerExEndpoint1");
    public final static QName ATPExEndpoint1 = new QName("http://www.hmco.com/EAI/Tibco/EnterpriseWebServices", "ATPExEndpoint1");
    static {
        URL url = null;
        try {
            url = new URL("file:/C:/Praveen/Institute/workspace/enterprise-web-services-camel/src/main/resources/META-INF/wsdl/EnterpriseWebServices.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(EnterpriseWebServicesServiceagent.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/C:/Praveen/Institute/workspace/enterprise-web-services-camel/src/main/resources/META-INF/wsdl/EnterpriseWebServices.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public EnterpriseWebServicesServiceagent(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public EnterpriseWebServicesServiceagent(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public EnterpriseWebServicesServiceagent() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns Order
     */
    @WebEndpoint(name = "OrderEndpoint1")
    public Order getOrderEndpoint1() {
        return super.getPort(OrderEndpoint1, Order.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns Order
     */
    @WebEndpoint(name = "OrderEndpoint1")
    public Order getOrderEndpoint1(WebServiceFeature... features) {
        return super.getPort(OrderEndpoint1, Order.class, features);
    }
    /**
     *
     * @return
     *     returns EskerServices
     */
    @WebEndpoint(name = "EskerServicesEndpoint1")
    public EskerServices getEskerServicesEndpoint1() {
        return super.getPort(EskerServicesEndpoint1, EskerServices.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns EskerServices
     */
    @WebEndpoint(name = "EskerServicesEndpoint1")
    public EskerServices getEskerServicesEndpoint1(WebServiceFeature... features) {
        return super.getPort(EskerServicesEndpoint1, EskerServices.class, features);
    }
    /**
     *
     * @return
     *     returns OrderEx
     */
    @WebEndpoint(name = "OrderExEndpoint1")
    public OrderEx getOrderExEndpoint1() {
        return super.getPort(OrderExEndpoint1, OrderEx.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns OrderEx
     */
    @WebEndpoint(name = "OrderExEndpoint1")
    public OrderEx getOrderExEndpoint1(WebServiceFeature... features) {
        return super.getPort(OrderExEndpoint1, OrderEx.class, features);
    }
    /**
     *
     * @return
     *     returns TransactionEx
     */
    @WebEndpoint(name = "TransactionExEndpoint1")
    public TransactionEx getTransactionExEndpoint1() {
        return super.getPort(TransactionExEndpoint1, TransactionEx.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns TransactionEx
     */
    @WebEndpoint(name = "TransactionExEndpoint1")
    public TransactionEx getTransactionExEndpoint1(WebServiceFeature... features) {
        return super.getPort(TransactionExEndpoint1, TransactionEx.class, features);
    }
    /**
     *
     * @return
     *     returns MaterialEx
     */
    @WebEndpoint(name = "MaterialExEndpoint1")
    public MaterialEx getMaterialExEndpoint1() {
        return super.getPort(MaterialExEndpoint1, MaterialEx.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MaterialEx
     */
    @WebEndpoint(name = "MaterialExEndpoint1")
    public MaterialEx getMaterialExEndpoint1(WebServiceFeature... features) {
        return super.getPort(MaterialExEndpoint1, MaterialEx.class, features);
    }
    /**
     *
     * @return
     *     returns CustomerEx
     */
    @WebEndpoint(name = "CustomerExEndpoint1")
    public CustomerEx getCustomerExEndpoint1() {
        return super.getPort(CustomerExEndpoint1, CustomerEx.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CustomerEx
     */
    @WebEndpoint(name = "CustomerExEndpoint1")
    public CustomerEx getCustomerExEndpoint1(WebServiceFeature... features) {
        return super.getPort(CustomerExEndpoint1, CustomerEx.class, features);
    }
    /**
     *
     * @return
     *     returns ATPEx
     */
    @WebEndpoint(name = "ATPExEndpoint1")
    public ATPEx getATPExEndpoint1() {
        return super.getPort(ATPExEndpoint1, ATPEx.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ATPEx
     */
    @WebEndpoint(name = "ATPExEndpoint1")
    public ATPEx getATPExEndpoint1(WebServiceFeature... features) {
        return super.getPort(ATPExEndpoint1, ATPEx.class, features);
    }

}
